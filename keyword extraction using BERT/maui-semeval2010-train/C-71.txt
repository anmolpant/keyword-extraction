A Point-Distribution Index and Its Application to
Sensor-Grouping in Wireless Sensor Networks
Yangfan Zhou Haixuan Yang Michael R. Lyu Edith C.-H. Ngai
Department of Computer Science and Engineering
The Chinese University of Hong Kong
Hong Kong, China
{yfzhou, hxyang, lyu, chngai}@cse.cuhk.edu.hk
ABSTRACT
We propose ι, a novel index for evaluation of point-distribution.
ι is the minimum distance between each pair of points 
normalized by the average distance between each pair of points. We find
that a set of points that achieve a maximum value of ι result in
a honeycomb structure. We propose that ι can serve as a good
index to evaluate the distribution of the points, which can be 
employed in coverage-related problems in wireless sensor networks
(WSNs). To validate this idea, we formulate a general 
sensorgrouping problem for WSNs and provide a general sensing model.
We show that locally maximizing ι at sensor nodes is a good 
approach to solve this problem with an algorithm called 
Maximizingι Node-Deduction (MIND). Simulation results verify that MIND
outperforms a greedy algorithm that exploits sensor-redundancy we
design. This demonstrates a good application of employing ι in
coverage-related problems for WSNs.
Categories and Subject Descriptors
C.2.4 [Computer - Communication Networks]: Network 
Architecture and Design; C.3 [Special-Purpose and Application-Based
Systems]: Realtime and Embedded Systems
General Terms
Theory, Algorithms, Design, Verification, Performance
1. INTRODUCTION
A wireless sensor network (WSN) consists of a large number of
in-situ battery-powered sensor nodes. A WSN can collect the data
about physical phenomena of interest [1]. There are many 
potential applications of WSNs, including environmental monitoring and
surveillance, etc. [1][11].
In many application scenarios, WSNs are employed to conduct
surveillance tasks in adverse, or even worse, in hostile working 
environments. One major problem caused is that sensor nodes are
subjected to failures. Therefore, fault tolerance of a WSN is 
critical.
One way to achieve fault tolerance is that a WSN should contain
a large number of redundant nodes in order to tolerate node 
failures. It is vital to provide a mechanism that redundant nodes can be
working in sleeping mode (i.e., major power-consuming units such
as the transceiver of a redundant sensor node can be shut off) to
save energy, and thus to prolong the network lifetime. Redundancy
should be exploited as much as possible for the set of sensors that
are currently taking charge in the surveillance work of the network
area [6].
We find that the minimum distance between each pair of points
normalized by the average distance between each pair of points
serves as a good index to evaluate the distribution of the points. We
call this index, denoted by ι, the normalized minimum distance. If
points are moveable, we find that maximizing ι results in a 
honeycomb structure. The honeycomb structure poses that the coverage
efficiency is the best if each point represents a sensor node that
is providing surveillance work. Employing ι in coverage-related
problems is thus deemed promising.
This enlightens us that maximizing ι is a good approach to 
select a set of sensors that are currently taking charge in the 
surveillance work of the network area. To explore the effectiveness of
employing ι in coverage-related problems, we formulate a 
sensorgrouping problem for high-redundancy WSNs. An algorithm called
Maximizing-ι Node-Deduction (MIND) is proposed in which 
redundant sensor nodes are removed to obtain a large ι for each set of
sensors that are currently taking charge in the surveillance work of
the network area. We also introduce another greedy solution called
Incremental Coverage Quality Algorithm (ICQA) for this problem,
which serves as a benchmark to evaluate MIND.
The main contribution of this paper is twofold. First, we 
introduce a novel index ι for evaluation of point-distribution. We show
that maximizing ι of a WSN results in low redundancy of the 
network. Second, we formulate a general sensor-grouping problem
for WSNs and provide a general sensing model. With the MIND
algorithm we show that locally maximizing ι among each sensor
node and its neighbors is a good approach to solve this problem.
This demonstrates a good application of employing ι in 
coveragerelated problems.
The rest of the paper is organized as follows. In Section 2, we
introduce our point-distribution index ι. We survey related work
and formulate a sensor-grouping problem together with a general
sensing model in Section 3. Section 4 investigates the application
of ι in this grouping problem. We propose MIND for this problem
1171
and introduce ICQA as a benchmark. In Section 5, we present
our simulation results in which MIND and ICQA are compared.
Section 6 provides conclusion remarks.
2. THE NORMALIZED MINIMUM DISTANCE
ι: A POINT-DISTRIBUTION INDEX
Suppose there are n points in a Euclidean space Ω. The 
coordinates of these points are denoted by xi (i = 1, ..., n).
It may be necessary to evaluate how the distribution of these
points is. There are many metrics to achieve this goal. For 
example, the Mean Square Error from these points to their mean value
can be employed to calculate how these points deviate from their
mean (i.e., their central). In resource-sharing evaluation, the Global
Fairness Index (GFI) is often employed to measure how even the
resource distributes among these points [8], when xi represents the
amount of resource that belong to point i. In WSNs, GFI is usually
used to calculate how even the remaining energy of sensor nodes
is.
When n is larger than 2 and the points do not all overlap (That
points all overlap means xi = xj, ∀ i, j = 1, 2, ..., n). We propose
a novel index called the normalized minimum distance, namely ι,
to evaluate the distribution of the points. ι is the minimum distance
between each pair of points normalized by the average distance
between each pair of points. It is calculated by:
ι =
min(||xi − xj||)
µ
(∀ i, j = 1, 2, ..., n; and i = j) (1)
where ||xi − xj|| denotes the Euclidean distance between point
i and point j in Ω, the min(·) function calculates the minimum
distance between each pair of points, and µ is the average distance
between each pair of points, which is:
µ =
(
Pn
i=1
Pn
j=1,j=i ||xi − xj||)
n(n − 1)
(2)
ι measures how well the points separate from one another. 
Obviously, ι is in interval [0, 1]. ι is equal to 1 if and only if n is equal
to 3 and these three points forms an equilateral triangle. ι is equal
to zero if any two points overlap. ι is a very interesting value of a
set of points. If we consider each xi (∀i = 1, ..., n) is a variable in
Ω, how these n points would look like if ι is maximized?
An algorithm is implemented to generate the topology in which
ι is locally maximized (The algorithm can be found in [19]). We
consider a 2-dimensional space. We select n = 10, 20, 30, ..., 100
and perform this algorithm. In order to avoid that the algorithm
converge to local optimum, we select different random seeds to
generate the initial points for 1000 time and obtain the best one
that results in the largest ι when the algorithm converges. Figure 1
demonstrates what the resulting topology looks like when n = 20
as an example.
Suppose each point represents a sensor node. If the sensor 
coverage model is the Boolean coverage model [15][17][18][14] and
the coverage radius of each node is the same. It is exciting to see
that this topology results in lowest redundancy because the Vonoroi
diagram [2] formed by these nodes (A Vonoroi diagram formed by
a set of nodes partitions a space into a set of convex polygons such
that points inside a polygon are closest to only one particular node)
is a honeycomb-like structure1
.
This enlightens us that ι may be employed to solve problems
related to sensor-coverage of an area. In WSNs, it is desirable
1
This is how base stations of a wireless cellular network are 
deployed and why such a network is called a cellular one.
0 20 40 60 80 100 120 140 160
0
20
40
60
80
100
120
140
160
X
Y
Figure 1: Node Number = 20, ι = 0.435376
that the active sensor nodes that are performing surveillance task
should separate from one another. Under the constraint that the
sensing area should be covered, the more each node separates from
the others, the less the redundancy of the coverage is. ι indicates
the quality of such separation. It should be useful for approaches
on sensor-coverage related problems.
In our following discussions, we will show the effectiveness of
employing ι in sensor-grouping problem.
3. THE SENSOR-GROUPING PROBLEM
In many application scenarios, to achieve fault tolerance, a WSN
contains a large number of redundant nodes in order to tolerate
node failures. A node sleeping-working schedule scheme is 
therefore highly desired to exploit the redundancy of working sensors
and let as many nodes as possible sleep.
Much work in the literature is on this issue [6]. Yan et al 
introduced a differentiated service in which a sensor node finds out
its responsible working duration with cooperation of its neighbors
to ensure the coverage of sampled points [17]. Ye et al developed
PEAS in which sensor nodes wake up randomly over time, probe
their neighboring nodes, and decide whether they should begin to
take charge of surveillance work [18]. Xing et al exploited a 
probabilistic distributed detection model with a protocol called 
Coordinating Grid (Co-Grid) [16]. Wang et al designed an approach called
Coverage Configuration Protocol (CCP) which introduced the 
notion that the coverage degree of intersection-points of the 
neighboring nodes" sensing-perimeters indicates the coverage of a convex
region [15]. In our recent work [7], we also provided a sleeping
configuration protocol, namely SSCP, in which sleeping eligibility
of a sensor node is determined by a local Voronoi diagram. SSCP
can provide different levels of redundancy to maintain different 
requirements of fault tolerance.
The major feature of the aforementioned protocols is that they
employ online distributed and localized algorithms in which a 
sensor node determines its sleeping eligibility and/or sleeping time
based on the coverage requirement of its sensing area with some
information provided by its neighbors.
Another major approach for sensor node sleeping-working 
scheduling issue is to group sensor nodes. Sensor nodes in a network are
divided into several disjoint sets. Each set of sensor nodes are able
to maintain the required area surveillance work. The sensor nodes
are scheduled according to which set they belong to. These sets
work successively. Only one set of sensor nodes work at any time.
We call the issue sensor-grouping problem.
The major advantage of this approach is that it avoids the 
overhead caused by the processes of coordination of sensor nodes to
make decision on whether a sensor node is a candidate to sleep or
1172
work and how long it should sleep or work. Such processes should
be performed from time to time during the lifetime of a network in
many online distributed and localized algorithms. The large 
overhead caused by such processes is the main drawback of the 
online distributed and localized algorithms. On the contrary, roughly
speaking, this approach groups sensor nodes in one time and 
schedules when each set of sensor nodes should be on duty. It does not
require frequent decision-making on working/sleeping eligibility2
.
In [13] by Slijepcevic et al, the sensing area is divided into 
regions. Sensor nodes are grouped with the most-constrained 
leastconstraining algorithm. It is a greedy algorithm in which the 
priority of selecting a given sensor is determined by how many 
uncovered regions this sensor covers and the redundancy caused by
this sensor. In [5] by Cardei et al, disjoint sensor sets are 
modeled as disjoint dominating sets. Although maximum dominating
sets computation is NP-complete, the authors proposed a 
graphcoloring based algorithm. Cardei et al also studied similar problem
in the domain of covering target points in [4]. The NP-completeness
of the problem is proved and a heuristic that computes the sets are
proposed. These algorithms are centralized solutions of 
sensorgrouping problem.
However, global information (e.g., the location of each in-network
sensor node) of a large scale WSN is also very expensive to 
obtained online. Also it is usually infeasible to obtain such 
information before sensor nodes are deployed. For example, sensor nodes
are usually deployed in a random manner and the location of each
in-network sensor node is determined only after a node is deployed.
The solution of sensor-grouping problem should only base on 
locally obtainable information of a sensor node. That is to say, nodes
should determine which group they should join in a fully 
distributed way. Here locally obtainable information refers to a node"s
local information and the information that can be directly obtained
from its adjacent nodes, i.e., nodes within its communication range.
In Subsection 3.1, we provide a general problem formulation of
the sensor-grouping problem. Distributed-solution requirement is
formulated in this problem. It is followed by discussion in 
Subsection 3.2 on a general sensing model, which serves as a given
condition of the sensor-grouping problem formulation.
To facilitate our discussions, the notations in our following 
discussions are described as follows.
• n: The number in-network sensor nodes.
• S(j) (j = 1, 2, ..., m): The jth set of sensor nodes where m
is the number of sets.
• L(i) (i = 1, 2, ..., n): The physical location of node i.
• φ: The area monitored by the network: i.e., the sensing area
of the network.
• R: The sensing radius of a sensor node. We assume that
a sensor node can only be responsible to monitor a circular
area centered at the node with a radius equal to R. This is
a usual assumption in work that addresses sensor-coverage
related problems. We call this circular area the sensing area
of a node.
3.1 Problem Formulation
We assume that each sensor node can know its approximate 
physical location. The approximate location information is obtainable
if each sensor node carries a GPS receiver or if some localization
algorithms are employed (e.g., [3]).
2
Note that if some nodes die, a re-grouping process might also be
performed to exploit the remaining nodes in a set of sensor nodes.
How to provide this mechanism is beyond the scope of this paper
and yet to be explored.
Problem 1. Given:
• The set of each sensor node i"s sensing neighbors N(i) and
the location of each member in N(i);
• A sensing model which quantitatively describes how a point
P in area φ is covered by sensor nodes that are responsible to
monitor this point. We call this quantity the coverage quality
of P.
• The coverage quality requirement in φ, denoted by s. When
the coverage of a point is larger than this threshold, we say
this point is covered.
For each sensor node i, make a decision on which group S(j) it
should join so that:
• Area φ can be covered by sensor nodes in each set S(j)
• m, the number of sets S(j) is maximized.
In this formulation, we call sensor nodes within a circular area
centered at a sensor node i with a radius equal to 2 · R the sensing
neighbors of node i. This is because sensors nodes in this area,
together with node i, may be cooperative to ensure the coverage of
a point inside node i"s sensing area.
We assume that the communication range of a sensor node is
larger than 2 · R, which is also a general assumption in work that
addresses sensor-coverage related problems. That is to say, the first
given condition in Problem 1 is the information that can be obtained
directly from a node"s adjacent nodes. It is therefore locally 
obtainable information. The last two given conditions in this problem
formulation can be programmed into a node before it is deployed
or by a node-programming protocol (e.g., [9]) during network 
runtime. Therefore, the given conditions can all be easily obtained by
a sensor-grouping scheme with fully distributed implementation.
We reify this problem with a realistic sensing model in next 
subsection.
3.2 A General Sensing Model
As WSNs are usually employed to monitor possible events in a
given area, it is therefore a design requirement that an event 
occurring in the network area must/may be successfully detected by
sensors.
This issue is usually formulated as how to ensure that an event
signal omitted in an arbitrary point in the network area can be 
detected by sensor nodes. Obviously, a sensing model is required to
address this problem so that how a point in the network area is 
covered can be modeled and quantified. Thus the coverage quality of
a WSN can be evaluated.
Different applications of WSNs employ different types of 
sensors, which surely have widely different theoretical and physical
characteristics. Therefore, to fulfill different application 
requirements, different sensing models should be constructed based on the
characteristics of the sensors employed.
A simple theoretical sensing model is the Boolean sensing model
[15][18][17][14]. Boolean sensing model assumes that a sensor
node can always detect an event occurring in its responsible 
sensing area. But most sensors detect events according to the signal
strength sensed. Event signals usually fade in relation to the 
physical distance between an event and the sensor. The larger the 
distance, the weaker the event signals that can be sensed by the sensor,
which results in a reduction of the probability that the event can be
successfully detected by the sensor.
As in WSNs, event signals are usually electromagnetic, acoustic,
or photic signals, they fade exponentially with the increasing of
1173
their transmit distance. Specifically, the signal strength E(d) of an
event that is received by a sensor node satisfies:
E(d) =
α
dβ
(3)
where d is the physical distance from the event to the sensor node;
α is related to the signal strength omitted by the event; and β is
signal fading factor which is typically a positive number larger than
or equal to 2. Usually, α and β are considered as constants.
Based on this notion, to be more reasonable, researchers propose
collaborative sensing model to capture application requirements:
Area coverage can be maintained by a set of collaborative sensor
nodes: For a point with physical location L, the point is considered
covered by the collaboration of i sensors (denoted by k1, ..., ki) if
and only if the following two equations holds [7][10][12].
∀j = 1, ..., i; L(kj) − L < R. (4)
C(L) =
iX
j=1
(E( L(kj) − L ) > s. (5)
C(L) is regarded as the coverage quality of location L in the
network area [7][10][12].
However, we notice that defining the sensibility as the sum of the
sensed signal strength by each collaborative sensor implies a very
special application: Applications must employ the sum of the 
signal strength to achieve decision-making. To capture generally 
realistic application requirement, we modify the definition described
in Equation (5). The model we adopt in this paper is described in
details as follows.
We consider the probability P(L, kj ) that an event located at L
can be detected by sensor kj is related to the signal strength sensed
by kj. Formally,
P(L, kj) = γE(d) =
δ
( L(kj) − L / + 1)β
, (6)
where γ is a constant and δ = γα is a constant too. normalizes
the distance to a proper scale and the +1 item is to avoid infinite
value of P(L, kj).
The probability that an event located at L can be detected by any
collaborative sensors that satisfied Equation (4) is:
P (L) = 1 −
iY
j=1
(1 − P(L, kj )). (7)
As the detection probability P (L) reasonably determines how
an event occurring at location L can be detected by the networks, it
is a good measure of the coverage quality of location L in a WSN.
Specifically, Equation (5) is modified to:
C(L) = P (L)
= 1 −
iY
j=1
[1 −
δ
( L(kj) − L / + 1)β
] > s. (8)
To sum it up, we consider a point at location L is covered if
Equation (4) and (8) hold.
4. MAXIMIZING-ι NODE-DEDUCTION
ALGORITHM FOR SENSOR-GROUPING
PROBLEM
Before we process to introduce algorithms to solve the sensor
grouping problem, let us define the margin (denoted by θ) of an
area φ monitored by the network as the band-like marginal area
of φ and all the points on the outer perimeter of θ is ρ distance
away from all the points on the inner perimeter of θ. ρ is called the
margin length.
In a practical network, sensor nodes are usually evenly deployed
in the network area. Obviously, the number of sensor nodes that
can sense an event occurring in the margin of the network is smaller
than the number of sensor nodes that can sense an event occurring
in other area of the network. Based on this consideration, in our
algorithm design, we ensure the coverage quality of the network
area except the margin. The information on φ and ρ is 
networkbased. Each in-network sensor node can be pre-programmed or
on-line informed about φ and ρ, and thus calculate whether a point
in its sensing area is in the margin or not.
4.1 Maximizing-ι Node-Deduction Algorithm
The node-deduction process of our Maximizing-ι Node-Deduction
Algorithm (MIND) is simple. A node i greedily maximizes ι of the
sub-network composed by itself, its ungrouped sensing neighbors,
and the neighbors that are in the same group of itself. Under the
constraint that the coverage quality of its sensing area should be
ensured, node i deletes nodes in this sub-network one by one. The
candidate to be pruned satisfies that:
• It is an ungrouped node.
• The deletion of the node will not result in uncovered-points
inside the sensing area of i.
A candidate is deleted if the deletion of the candidate results in
largest ι of the sub-network compared to the deletion of other 
candidates. This node-deduction process continues until no candidate
can be found. Then all the ungrouped sensing neighbors that are
not deleted are grouped into the same group of node i. We call the
sensing neighbors that are in the same group of node i the group
sensing neighbors of node i. We then call node i a finished node,
meaning that it has finished the above procedure and the sensing
area of the node is covered. Those nodes that have not yet finished
this procedure are called unfinished nodes.
The above procedure initiates at a random-selected node that is
not in the margin. The node is grouped to the first group. It 
calculates the resulting group sensing neighbors of it based on the above
procedure. It informs these group sensing neighbors that they are
selected in the group. Then it hands over the above procedure to
an unfinished group sensing neighbors that is the farthest from 
itself. This group sensing neighbor continues this procedure until no
unfinished neighbor can be found. Then the first group is formed
(Algorithmic description of this procedure can be found at [19]).
After a group is formed, another random-selected ungrouped
node begins to group itself to the second group and initiates the
above procedure. In this way, groups are formed one by one. When
a node that involves in this algorithm found out that the coverage
quality if its sensing area, except what overlaps the network margin,
cannot be ensured even if all its ungrouped sensing neighbors are
grouped into the same group as itself, the algorithm stops. MIND
is based on locally obtainable information of sensor nodes. It is
a distributed algorithm that serves as an approximate solution of
Problem 1.
4.2 Incremental Coverage Quality Algorithm:
A Benchmark for MIND
To evaluate the effectiveness of introducing ι in the sensor-group
problem, another algorithm for sensor-group problem called 
Incremental Coverage Quality Algorithm (ICQA) is designed. Our aim
1174
is to evaluate how an idea, i.e., MIND, based on locally maximize
ι performs.
In ICQA, a node-selecting process is as follows. A node i 
greedily selects an ungrouped sensing neighbor in the same group as 
itself one by one, and informs the neighbor it is selected in the group.
The criterion is:
• The selected neighbor is responsible to provide surveillance
work for some uncovered parts of node i"s sensing area. (i.e.,
the coverage quality requirement of the parts is not fulfilled
if this neighbor is not selected.)
• The selected neighbor results in highest improvement of the
coverage quality of the neighbor"s sensing area.
The improvement of the coverage quality, mathematically, should
be the integral of the the improvements of all points inside the
neighbor"s sensing area. A numerical approximation is employed
to calculate this improvement. Details are presented in our 
simulation study.
This node-selecting process continues until the sensing area of
node i is entirely covered. In this way, node i"s group sensing
neighbors are found. The above procedure is handed over as what
MIND does and new groups are thus formed one by one. And
the condition that ICQA stops is the same as MIND. ICQA is also
based on locally obtainable information of sensor nodes. ICQA is
also a distributed algorithm that serves as an approximate solution
of Problem 1.
5. SIMULATION RESULTS
To evaluate the effectiveness of employing ι in sensor-grouping
problem, we build simulation surveillance networks. We employ
MIND and ICQA to group the in-network sensor nodes. We 
compare the grouping results with respect to how many groups both
algorithms find and how the performance of the resulting groups
are.
Detailed settings of the simulation networks are shown in Table
1. In simulation networks, sensor nodes are randomly deployed in
a uniform manner in the network area.
Table 1: The settings of the simulation networks
Area of sensor field 400m*400m
ρ 20m
R 80m
α, β, γ and 1.0, 2.0, 1.0 and 100.0
s 0.6
For evaluating the coverage quality of the sensing area of a node,
we divide the sensing area of a node into several regions and regard
the coverage quality of the central point in each region as a 
representative of the coverage quality of the region. This is a numerical
approximation. Larger number of such regions results in better 
approximation. As sensor nodes are with low computational 
capacity, there is a tradeoff between the number of such regions and the
precision of the resulting coverage quality of the sensing area of a
node. In our simulation study, we set this number 12. For 
evaluating the improvement of coverage quality in ICQA, we sum up all
the improvements at each region-center as the total improvement.
5.1 Number of Groups Formed by MIND and
ICQA
We set the total in-network node number to different values and
let the networks perform MIND and ICQA. For each n, 
simulations run with several random seeds to generate different networks.
Results are averaged. Figure 2 shows the group numbers found in
networks with different n"s.
500 1000 1500 2000
0
5
10
15
20
25
30
35
40
45
50
Total in−network node number
Totalnumberofgroupsfound
ICQA
MMNP
Figure 2: The number of groups found by MIND and ICQA
We can see that MIND always outperforms ICQA in terms of
the number of groups formed. Obviously, the larger the number of
groups can be formed, the more the redundancy of each group is
exploited. This output shows that an approach like MIND that aim
to maximize ι of the resulting topology can exploits redundancy
well.
As an example, in case that n = 1500, the results of five 
networks are listed in Table 2.
Table 2: The grouping results of five networks with n = 1500
Net MIND ICQA MIND ICQA
Group Number Group Number Average ι Average ι
1 34 31 0.145514 0.031702
2 33 30 0.145036 0.036649
3 33 31 0.156483 0.033578
4 32 31 0.152671 0.029030
5 33 32 0.146560 0.033109
The difference between the average ι of the groups in each 
network shows that groups formed by MIND result in topologies with
larger ι"s. It demonstrates that ι is good indicator of redundancy in
different networks.
5.2 The Performance of the Resulting Groups
Although MIND forms more groups than ICQA does, which 
implies longer lifetime of the networks, another importance 
consideration is how these groups formed by MIND and ICQA perform.
We let 10000 events randomly occur in the network area except
the margin. We compare how many events happen at the locations
where the quality is less than the requirement s = 0.6 when each
resulting group is conducting surveillance work (We call the 
number of such events the failure number of group). Figure 3 shows
the average failure numbers of the resulting groups when different
node numbers are set.
We can see that the groups formed by MIND outperform those
formed by ICQA because the groups formed by MIND result in
lower failure numbers. This further demonstrates that MIND is a
good approach for sensor-grouping problem.
1175
500 1000 1500 2000
0
10
20
30
40
50
60
Total in−network node number
averagefailurenumbers
ICQA
MMNP
Figure 3: The failure numbers of MIND and ICQA
6. CONCLUSION
This paper proposes ι, a novel index for evaluation of 
pointdistribution. ι is the minimum distance between each pair of points
normalized by the average distance between each pair of points.
We find that a set of points that achieve a maximum value of ι 
result in a honeycomb structure. We propose that ι can serve as a
good index to evaluate the distribution of the points, which can be
employed in coverage-related problems in wireless sensor networks
(WSNs). We set out to validate this idea by employing ι to a 
sensorgrouping problem. We formulate a general sensor-grouping 
problem for WSNs and provide a general sensing model. With an 
algorithm called Maximizing-ι Node-Deduction (MIND), we show that
maximizing ι at sensor nodes is a good approach to solve this 
problem. Simulation results verify that MIND outperforms a greedy 
algorithm that exploits sensor-redundancy we design in terms of the
number and the performance of the groups formed. This 
demonstrates a good application of employing ι in coverage-related 
problems.
7. ACKNOWLEDGEMENT
The work described in this paper was substantially supported by
two grants, RGC Project No. CUHK4205/04E and UGC Project
No. AoE/E-01/99, of the Hong Kong Special Administrative 
Region, China.
8. REFERENCES
[1] I. Akyildiz, W. Su, Y. Sankarasubramaniam, and E. Cayirci.
A survey on wireless sensor networks. IEEE
Communications Magazine, 40(8):102-114, 2002.
[2] F. Aurenhammer. Vononoi diagram - a survey of a
fundamental geometric data structure. ACM Computing
Surveys, 23(2):345-405, September 1991.
[3] N. Bulusu, J. Heidemann, and D. Estrin. GPS-less low-cost
outdoor localization for very small devices. IEEE Personal
Communication, October 2000.
[4] M. Cardei and D.-Z. Du. Improving wireless sensor network
lifetime through power aware organization. ACM Wireless
Networks, 11(3), May 2005.
[5] M. Cardei, D. MacCallum, X. Cheng, M. Min, X. Jia, D. Li,
and D.-Z. Du. Wireless sensor networks with energy efficient
organization. Journal of Interconnection Networks, 3(3-4),
December 2002.
[6] M. Cardei and J. Wu. Coverage in wireless sensor networks.
In Handbook of Sensor Networks, (eds. M. Ilyas and I.
Magboub), CRC Press, 2004.
[7] X. Chen and M. R. Lyu. A sensibility-based sleeping
configuration protocol for dependable wireless sensor
networks. CSE Technical Report, The Chinese University of
Hong Kong, 2005.
[8] R. Jain, W. Hawe, and D. Chiu. A quantitative measure of
fairness and discrimination for resource allocation in shared
computer systems. Technical Report DEC-TR-301,
September 1984.
[9] S. S. Kulkarni and L. Wang. MNP: Multihop network
reprogramming service for sensor networks. In Proc. of the
25th International Conference on Distributed Computing
Systems (ICDCS), June 2005.
[10] B. Liu and D. Towsley. A study on the coverage of
large-scale sensor networks. In Proc. of the 1st IEEE
International Conference on Mobile ad-hoc and Sensor
Systems, Fort Lauderdale, FL, October 2004.
[11] A. Mainwaring, J. Polastre, R. Szewczyk, D. Culler, and
J. Anderson. Wireless sensor networks for habitat
monitoring. In Proc. of the ACM International Workshop on
Wireless Sensor Networks and Applications, 2002.
[12] S. Megerian, F. Koushanfar, G. Qu, G. Veltri, and
M. Potkonjak. Explosure in wirless sensor networks: Theory
and pratical solutions. Wireless Networks, 8, 2002.
[13] S. Slijepcevic and M. Potkonjak. Power efficient
organization of wireless sensor networks. In Proc. of the
IEEE International Conference on Communications (ICC),
volume 2, Helsinki, Finland, June 2001.
[14] D. Tian and N. D. Georganas. A node scheduling scheme for
energy conservation in large wireless sensor networks.
Wireless Communications and Mobile Computing,
3:272-290, May 2003.
[15] X. Wang, G. Xing, Y. Zhang, C. Lu, R. Pless, and C. Gill.
Integrated coverage and connectivity configuration in
wireless sensor networks. In Proc. of the 1st ACM
International Conference on Embedded Networked Sensor
Systems (SenSys), Los Angeles, CA, November 2003.
[16] G. Xing, C. Lu, R. Pless, and J. A. O´ Sullivan. Co-Grid: an
efficient converage maintenance protocol for distributed
sensor networks. In Proc. of the 3rd International
Symposium on Information Processing in Sensor Networks
(IPSN), Berkeley, CA, April 2004.
[17] T. Yan, T. He, and J. A. Stankovic. Differentiated
surveillance for sensor networks. In Proc. of the 1st ACM
International Conference on Embedded Networked Sensor
Systems (SenSys), Los Angeles, CA, November 2003.
[18] F. Ye, G. Zhong, J. Cheng, S. Lu, and L. Zhang. PEAS: A
robust energy conserving protocol for long-lived sensor
networks. In Proc. of the 23rd International Conference on
Distributed Computing Systems (ICDCS), Providence, Rhode
Island, May 2003.
[19] Y. Zhou, H. Yang, and M. R. Lyu. A point-distribution index
and its application in coverage-related problems. CSE
Technical Report, The Chinese University of Hong Kong,
2006.
1176
